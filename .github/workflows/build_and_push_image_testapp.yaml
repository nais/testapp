name: Build and deploy testapp
on: [push]
env:
  REGISTRY: europe-north1-docker.pkg.dev/nais-io/nais/images

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: asdf-vm/actions/install@v1
        with:
          asdf_branch: v0.10.0
      - run: go version
      - run: go test -cover -tags integration_test ./...
  build_and_push_testapp:
    if: ${{ github.ref == 'refs/heads/master' }}
    needs: [test]
    permissions:
      contents: "read"
      id-token: "write"
    runs-on: ubuntu-latest
    outputs:
      imageTag: ${{ steps.metadata.outputs.version }}
    steps:
      - name: Checkout testapp
        uses: actions/checkout@v3
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v0.8.3"
        with:
          workload_identity_provider: ${{ secrets.NAIS_IO_WORKLOAD_IDENTITY_PROVIDER }}
          service_account: "gh-testapp@nais-io.iam.gserviceaccount.com"
          token_format: "access_token"
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to registry
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          registry: ${{ env.REGISTRY }}
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
      - name: Docker meta testapp
        id: metadata
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/testapp
          # Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern=v{{version}}
            type=semver,pattern=v{{major}}.{{minor}}
            type=semver,pattern=v{{major}}
            type=sha
      - name: Build and push testapp
        uses: docker/build-push-action@v3
        with:
          context: .
          file: Dockerfile_naas
          push: true
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
